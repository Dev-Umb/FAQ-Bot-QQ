import groovy.xml.MarkupBuilder
import org.yaml.snakeyaml.Yaml
buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        maven { url 'https://maven.aliyun.com/repository/public' }
        maven { url 'https://maven.aliyun.com/repository/jcenter' }
    }

    dependencies {
        classpath 'org.jooq:jooq-codegen:3.13.4'

        classpath group: 'mysql', name: 'mysql-connector-java', version: '8.0.21'

        classpath 'org.yaml:snakeyaml:1.26'
    }
}
plugins {
    id 'application'
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.3.72'
}
mainClassName = 'TestKt'
group 'org.example'
version '1.0-SNAPSHOT'


repositories {
    jcenter()
    mavenCentral()
}



dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib"

    testCompile group: 'junit', name: 'junit', version: '4.12'

    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.9'

    // https://mvnrepository.com/artifact/net.mamoe/mirai-core
    compile group: 'net.mamoe', name: 'mirai-core', version: '1.3.0'

    // https://mvnrepository.com/artifact/net.mamoe/mirai-core
    compile group: 'net.mamoe', name: 'mirai-core-qqandroid', version: '1.3.0'

    // https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j-core
    compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.13.3'

    // https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j-api
    compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.13.3'

    // https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j-api
    compile group: 'org.apache.logging.log4j', name: 'log4j-slf4j-impl', version: '2.13.3'

    // https://mvnrepository.com/artifact/org.yaml/snakeyaml
    compile group: 'org.yaml', name: 'snakeyaml', version: '1.26'

//    // https://mvnrepository.com/artifact/org.slf4j/slf4j-log4j12
//    compile group: 'org.slf4j', name: 'slf4j-log4j12', version: '1.7.30'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.8.0'


    implementation group: 'mysql', name: 'mysql-connector-java', version: '8.0.21'

    // https://mvnrepository.com/artifact/org.quartz-scheduler/quartz
    compile group: 'org.quartz-scheduler', name: 'quartz', version: '2.3.2'
    compile "me.liuwj.ktorm:ktorm-core:3.1.0"

    compile 'com.squareup.okhttp3:okhttp:4.8.0'
    implementation "com.google.code.gson:gson:2.8.5"

    // https://mvnrepository.com/artifact/org.jsoup/jsoup
    compile group: 'org.jsoup', name: 'jsoup', version: '1.13.1'
}
task generateJooq {
    doLast("gen") {
        def yml = new Yaml()
        def data = yml.load(new FileReader( new File("config.yml")))
        def writer = new StringWriter()
        def xml = new MarkupBuilder(writer)
                .configuration('xmlns': 'http://www.jooq.org/xsd/jooq-codegen-3.13.0.xsd') {
                    jdbc() {
                        url(data["dbUrl"])
                        user(data["dbUser"])
                        password(data["dbPwd"])
                    }
                    generator() {
                        database() {
                            inputSchema("timetable")
                        }
                        // Watch out for this caveat when using MarkupBuilder with "reserved names"
                        // - https://github.com/jOOQ/jOOQ/issues/4797
                        // - http://stackoverflow.com/a/11389034/521799
                        // - https://groups.google.com/forum/#!topic/jooq-user/wi4S9rRxk4A
                        generate([:]) {
                            pojos true
                            daos true
                        }
                        target() {
                            packageName('io.github.mzdluo123.timetablebot.gen')
                            directory('src/main/java')
                        }
                    }
                }
// Run the code generator
// ----------------------
        GenerationTool.generate(writer.toString())
    }
}
